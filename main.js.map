{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/errors/page-not-found.component.html","webpack:///./src/app/errors/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;AC5ByC;AACc;AAEmB;AAG1E,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,EAAE;QACR,uBAAuB;QACvB,YAAY,EAAE,+BAA+B;KAC9C;IACD;QACE,IAAI,EAAE,MAAM;QACZ,uBAAuB;QACvB,YAAY,EAAE,+BAA+B;KAC9C;IACD;QACE,IAAI,EAAE,SAAS;QACf,uBAAuB;QACvB,YAAY,EAAE,wCAAwC;KACvD;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,sFAAqB;KACjC;CACF,CAAC;AAYF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAClB,SAAS,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,cAAc;iBACnD;aACF;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACtC7B,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;ACAqE;AAQrE;IANA;QAOE,UAAK,GAAG,KAAK,CAAC;IAIhB,CAAC;IAFC,+BAAQ,GAAR;IACA,CAAC;IAJU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAIrB,CAAC;OACW,YAAY,CAKxB;IAAD,mBAAC;CAAA;AALwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AACgC;AACvB;AACkB;AAe1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sFAAqB;aACtB;YACD,OAAO,EAAE;gBACP,4FAAuB;gBACvB,uEAAa;gBACb,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrBtB,+F;;;;;;;;;;;;;;;;;;;;;ACA0C;AAM1C;IAAA;IAEA,CAAC;IAFY,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;SAE/B,CAAC;OACW,qBAAqB,CAEjC;IAAD,4BAAC;CAAA;AAFiC;;;;;;;;;;;;;ACNlC;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./contact/contact.module\": [\n\t\t\"./src/app/contact/contact.module.ts\",\n\t\t\"contact-contact-module\"\n\t],\n\t\"./home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"home-home-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PageNotFoundComponent } from './errors/page-not-found.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    // pathMatch: 'prefix',\r\n    loadChildren: './home/home.module#HomeModule'\r\n  },\r\n  {\r\n    path: 'home',\r\n    // pathMatch: 'prefix',\r\n    loadChildren: './home/home.module#HomeModule'\r\n  },\r\n  {\r\n    path: 'contact',\r\n    // pathMatch: 'prefix',\r\n    loadChildren: './contact/contact.module#ContactModule'\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes, { enableTracing: false } // <-- for dev\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  // encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  ngOnInit(): void {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageNotFoundComponent } from './errors/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <strong> 404 Not Found</strong>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html'\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}